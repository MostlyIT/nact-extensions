classes: {
  composition: {
    style.stroke-dash: 3
  }
}

# Input messages
StateSnapshots: StateSnapshots\n+ semantic information\n+ version {
  shape: page
  style.multiple: true
}
StateSnapshots -> DerivedAuthority.VersionGate
Subscribe: {
  shape: page
}
Subscribe -> DerivedAuthority.ReplayPublisher
Unsubscribe: {
  shape: page
}
Unsubscribe -> DerivedAuthority.ReplayPublisher

# Main actor
DerivedAuthority: {
  class: composition

  # Internal actors
  Combiner
  ReplayPublisher
  SemanticBrander
  ValueDeterminer
  VersionGate

  CombinedStateSnapshot: CombinedStateSnapshot\n+ version {
    shape: page
  }
  Combiner -> CombinedStateSnapshot -> ValueDeterminer
  StateSnapshotWithMetaData: StateSnapshot\n+ semantic information\n+ version {
    shape: page
  }
  SemanticBrander -> StateSnapshotWithMetaData -> ReplayPublisher
  StateSnapshot: StateSnapshot\n+ version {
    shape: page
  }
  ValueDeterminer -> StateSnapshot -> SemanticBrander
  StateSnapshots: StateSnapshots\n+ semantic information\n+ version {
    shape: page
    style.multiple: true
  }
  VersionGate -> StateSnapshots -> Combiner
}

# Output messages
OutputStateSnapshot: StateSnapshot\n+ semantic information\n+ version {
  shape: page
}
DerivedAuthority.ReplayPublisher -> OutputStateSnapshot -> Subscribers

# Environment actors
Subscribers: {
  style.multiple: true
}
